site_name: Qadence
repo_url: "https://github.com/pasqal-io/qadence/"
site_url: "https://pasqal-io.github.io/qadence/"
repo_name: "qadence"

nav:
  - Home: index.md

  - Getting started:
    - Installation: getting_started/installation.md
    - Development & Info:
      - Contributing: getting_started/CONTRIBUTING.md
      - Code of conduct: getting_started/CODE_OF_CONDUCT.md
      - License: getting_started/LICENSE.md

  - Contents:
    - Block system: content/block_system.md
    - Quantum models: content/quantummodels.md
    - Parametric programs: content/parameters.md
    - Quantum registers: content/register.md
    - State conventions: content/state_conventions.md
    - State initialization: content/state_init.md
    - Arbitrary Hamiltonians: content/hamiltonians.md
    - Wavefunction overlaps: content/overlap.md
    - Serialization: content/serializ_and_prep.md
    - Backends: content/backends.md

  - Tutorials:
    - Digital-analog quantum computing:
      - digital_analog_qc/index.md
      - Basic operations on neutral-atoms: digital_analog_qc/analog-basics.md
      - Fitting a simple function: digital_analog_qc/analog-qcl.md
      - Restricted local addressability: digital_analog_qc/semi-local-addressing.md
      - Pulse-level programming with Pulser: digital_analog_qc/pulser-basic.md
      - Solve a QUBO problem: digital_analog_qc/analog-qubo.md
      - CNOT with interacting qubits: digital_analog_qc/daqc-cnot.md

    - Variational quantum algorithms:
      - qml/index.md
      - Constructors: qml/qml_constructors.md
      - Training tools: qml/ml_tools.md
      - Quantum circuit learning: qml/qcl.md
      - Solving MaxCut with QAOA: qml/qaoa.md

    - Advanced Tutorials:
      - advanced_tutorials/index.md
      - Quantum circuits differentiation: advanced_tutorials/differentiability.md
      - Custom quantum models: advanced_tutorials/custom-models.md
      - Projector blocks: advanced_tutorials/projectors.md

    - Realistic simulations:
      - realistic_sims/index.md
      - Measurement protocols: realistic_sims/measurements.md
      - Simulated errors: realistic_sims/noise.md
      - Error mitigation: realistic_sims/mitigation.md

    - Development:
      - Architecture and sharp bits: development/architecture.md
      - Drawing: development/draw.md

  - API:
    - Block system: qadence/blocks.md
    - Operations: qadence/operations.md
    - Register: qadence/register.md
    - QuantumCircuit: qadence/quantumcircuit.md
    - Parameters: qadence/parameters.md
    - State preparation: qadence/states.md
    - Constructors: qadence/constructors.md
    - Transpilation: qadence/transpile.md
    - Execution: qadence/execution.md
    - Quantum models: qadence/models.md
    - QML tools: qadence/ml_tools.md
    - Serialization: qadence/serialization.md
    - Types: qadence/types.md
    - Drawing: qadence/draw.md

    - Backends:
      - Abstract backend: backends/backend.md
      - PyQTorch: backends/pyqtorch.md
      - Amazon Braket: backends/braket.md
      - Pulser: backends/pulser.md
      - DifferentiableBackend: backends/differentiable.md

edit_uri: edit/main/docs/

theme:
  name: material
  custom_dir: docs/extras/overrides/
  logo: extras/assets/logo/qadence_logo_small_white.svg
  features:
  - content.code.annotate
  - navigation.tabs
  - navigation.indexes
  - navigation.sections
  - content.code.copy
  - content.code.annotate

  palette:
  - media: "(prefers-color-scheme: light)"
    scheme: default
    primary: custom
    accent: custom
    toggle:
        icon: material/weather-sunny
        name: Switch to dark mode
  - media: "(prefers-color-scheme: dark)"
    scheme: slate
    primary: black
    accent: custom
    toggle:
        icon: material/weather-night
        name: Switch to light mode

markdown_extensions:
- admonition  # for notes
- footnotes
- pymdownx.arithmatex: # for mathjax
    generic: true
- pymdownx.highlight:
    anchor_linenums: true
- pymdownx.inlinehilite
- pymdownx.snippets
- pymdownx.details
- pymdownx.superfences:
    custom_fences:
    - name: python
      class: python
      validator: "!!python/name:markdown_exec.validator"
      format: "!!python/name:markdown_exec.formatter"

plugins:
- search
- section-index
- mkdocstrings:
    default_handler: python
    handlers:
      python:
        selection:
          filters:
            - "!^_"  # exlude all members starting with _
            - "^__init__$"  # but always include __init__ modules and methods
            - "^__new__$"  # but always include __init__ modules and methods
        options:
          show_root_toc_entry: false
          heading_level: 3
          merge_init_into_class: true
          docstring_section_style: spacy

- markdown-exec

extra:
 version:
   provider: mike

# To get nice tabs
extra_css:
- extras/css/mkdocstrings.css
- extras/css/colors.css
- extras/css/home.css

# For mathjax
extra_javascript:
  - extras/javascripts/mathjax.js
  - https://polyfill.io/v3/polyfill.min.js?features=es6
  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js

watch:
- qadence
